<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Zhao Ying]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://liontree.github.io//"/>
  <updated>2015-06-28T09:43:09.000Z</updated>
  <id>http://liontree.github.io//</id>
  
  <author>
    <name><![CDATA[Zhao Ying]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[基于Hexo和Github搭建博客]]></title>
    <link href="http://liontree.github.io/2015/06/28/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/index.html"/>
    <id>http://liontree.github.io/2015/06/28/基于Hexo和Github搭建博客/index.html</id>
    <published>2015-06-28T08:04:15.000Z</published>
    <updated>2015-06-28T09:43:09.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>是一个博客框架，功能上有点类似于Jekyll，都可以实现“一键部署”你自己的博客的效果，本文就来简单介绍下如何基于Hexo &amp; Github Page搭建自己的blog。</p>
<h2 id="Preparation">Preparation</h2><ol>
<li>Git，如果没有的话首先<a href="http://git-scm.com/" target="_blank" rel="external">安装</a>并<a href="http://git-scm.com/docs/git-config" target="_blank" rel="external">配置</a></li>
<li>nodejs，安装地址：<a href="https://nodejs.org/" target="_blank" rel="external">nodejs</a></li>
</ol>
<h2 id="Hexo_Install">Hexo Install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init yourB<span class="built_in">log</span></span><br><span class="line">$ <span class="built_in">cd</span> yourB<span class="built_in">log</span></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>以上步骤完成后，就可以在<code>yourBlog</code>目录下看到新生成的文件了</p>
<p><img src="hexofiles.png" height="130"></p>
<h2 id="Hexo_Config">Hexo Config</h2><h3 id="Github_repository">Github repository</h3><p>搭建blog首先要有一个托管的地方，如果你之前用Github托管过博客，那么这不是什么问题，新建一个仓库，然后设置<code>Deploy keys</code>。</p>
<p>生成Deploy keys:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></span><br></pre></td></tr></table></figure></p>
<p><img src="githubsetting1.png" height="320"></p>
<p><img src="githubsetting2.png" height="120"></p>
<h3 id="_config-yml">_config.yml</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># URL&#10;url: http://yoursite.com&#10;root: /&#10;permalink: :year/:month/:day/:title/index.html&#10;permalink_defaults:&#10;&#10;# Directory&#10;source_dir: source&#10;public_dir: public&#10;tag_dir: all-tags&#10;archive_dir: archives&#10;category_dir: categories&#10;code_dir: downloads/code&#10;i18n_dir: :lang&#10;skip_render:&#10;&#10;# Writing&#10;new_post_name: :title.md # File name of new posts&#10;default_layout: post&#10;titlecase: false # Transform title into titlecase&#10;external_link: true # Open external links in new tab&#10;filename_case: 0&#10;render_drafts: false&#10;post_asset_folder: true&#10;relative_link: true&#10;future: true&#10;highlight:&#10;  enable: true&#10;  line_number: true&#10;  auto_detect: true&#10;  tab_replace:&#10;&#10;# Category &#38; Tag&#10;default_category: uncategorized&#10;category_map:&#10;tag_map: &#10;&#10;# Date / Time format&#10;date_format: YYYY-MM-DD&#10;time_format: HH:mm:ss&#10;&#10;# Pagination&#10;per_page: 10&#10;pagination_dir: page&#10;&#10;# Extensions&#10;theme: tranquilpeak&#10;&#10;feed:&#10;    type: atom&#10;    path: atom.xml&#10;    limit: 20&#10;&#10;# Deployment&#10;deploy:&#10;  type: git&#10;  repo: https://github.com/XXX.git&#10;  branch: master</span><br></pre></td></tr></table></figure>
<h3 id="Hexo_themes">Hexo themes</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="external">这里</a>有很多不错的主题，下载完成后在Hexo的<code>_config.yml</code>中设置<code>theme</code>，有些主题自己本身也有相应的设置，可参考各自的README。</p>
<p>OK，到此一个基于Hexo&amp;Github搭建的blog已经完成了，接下来就是如何开始写了，不详细说了哈，hexo的基本命令都不复杂，可参考<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">官方文档</a>。</p>
<p>周末愉快：-）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a>是一个博客框架，功能上有点类似于Jekyll，都可以实现“一键部署”你自己的博客的效果，本文就来简单介绍下如何基于Hexo &am]]>
    </summary>
    
      <category term="Hexo" scheme="http://liontree.github.io/all-tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[make your Terminal more interesting]]></title>
    <link href="http://liontree.github.io/2015/06/27/make-your-Terminal-more-interesting/index.html"/>
    <id>http://liontree.github.io/2015/06/27/make-your-Terminal-more-interesting/index.html</id>
    <published>2015-06-27T09:03:33.000Z</published>
    <updated>2015-06-27T09:41:52.000Z</updated>
    <content type="html"><![CDATA[<p>经常ssh登录到公司的开发机上时，会看到一些比较有意思的welcome words，保守一点的一般是公司的名字，出格一点的那就不一定是显示什么了：-）我们自己平时在打开终端时，默认是没有这些有趣的东西的，不过没有没关系，可以自己设，方法非常简单，只需编辑<code>/etc/</code>下面的一个叫<code>motd</code>的文件即可，贴上喜欢的ASCII。</p>
<p>一般来说/etc/下面默认没有这个文件，新建一个即可，另外给大家推荐一个可以生成ASCII的网站：<a href="http://ascii.mastervb.net/" target="_blank" rel="external">http://ascii.mastervb.net/</a></p>
<p>上一张我现在的终端界面吧</p>
<p><img src="terminal.png" height="400"></p>
<p>Have fun-:)</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>经常ssh登录到公司的开发机上时，会看到一些比较有意思的welcome words，保守一点的一般是公司的名字，出格一点的那就不一定是显示什么了：-）我们自己平时在打开终端时，默认是没有这些有趣的东西的，不过没有没关系，可以自己设，方法非常简单，只需编辑<code>/etc]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[UI Testing API]]></title>
    <link href="http://liontree.github.io/2015/06/26/UI-Testing-API/index.html"/>
    <id>http://liontree.github.io/2015/06/26/UI-Testing-API/index.html</id>
    <published>2015-06-26T06:03:54.000Z</published>
    <updated>2015-06-26T10:01:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="UI_Testing_API">UI Testing API</h2><p>There are there main Classes in UI Testing: <code>XCUIApplication</code>, <code>XCUIElement</code> and <code>XCUIElementQuery</code>. All of them are available for iOS9.0 and OSX10.11. Now let’s take a look at how they work. </p>
<h3 id="XCUIApplication">XCUIApplication</h3><p>You can download the documentation from Xcode7 and here are the APIs of @interface XCUIApplication.</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XCUIApplication</span> : <span class="title">XCUIElement</span></span></span><br><span class="line">- (<span class="keyword">void</span>)launch;</span><br><span class="line">- (<span class="keyword">void</span>)terminate;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSArray</span> &lt;<span class="built_in">NSString</span> *&gt; *launchArguments;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSDictionary</span> &lt;<span class="built_in">NSString</span> *, <span class="built_in">NSString</span> *&gt; *launchEnvironment;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>The app launchs at first when the test cases start to execute. If the application is already running, the ‘launch’ function will first terminate the existing instance to ensure clean state of the launched instance. Since all the tests need launch the application when they execute, it’s better to do this in <code>setUp()</code> that make sure it happens for each test method.</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)setUp &#123;</span><br><span class="line">    [<span class="keyword">super</span> setUp];</span><br><span class="line">    <span class="comment">// In UI tests it is usually best to stop immediately when a failure occurs.</span></span><br><span class="line">    <span class="keyword">self</span><span class="variable">.continueAfterFailure</span> = <span class="literal">NO</span>;</span><br><span class="line">    <span class="comment">// UI tests must launch the application that they test. Doing this in setup will make sure it happens for each test method.</span></span><br><span class="line">    [[[XC<span class="built_in">UIApplication</span> alloc] init] launch];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="XCUIElement">XCUIElement</h3><p>The APIs of <code>XCUIElement</code> have some differences between iOS and OSX. For example the tap event will call <code>- (void)tap</code> in iOS. But the clicking event will call <code>- (void)click</code> in OSX. It’s easy to understand as it’s according to user action on different platform. Let’s take a look at the APIs for iOS. They are quite similar to the APIs of UIAutomation. </p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)tap;</span><br><span class="line">- (<span class="keyword">void</span>)doubleTap;</span><br><span class="line">- (<span class="keyword">void</span>)twoFingerTap;</span><br><span class="line">- (<span class="keyword">void</span>)pressForDuration:(<span class="built_in">NSTimeInterval</span>)duration;</span><br><span class="line">- (<span class="keyword">void</span>)pressForDuration:(<span class="built_in">NSTimeInterval</span>)duration thenDragToElement:(XC<span class="built_in">UIElement</span> *)otherElement;</span><br><span class="line">- (<span class="keyword">void</span>)swipeUp;</span><br><span class="line">- (<span class="keyword">void</span>)swipeDown;</span><br><span class="line">- (<span class="keyword">void</span>)swipeLeft;</span><br><span class="line">- (<span class="keyword">void</span>)swipeRight;</span><br><span class="line">- (<span class="keyword">void</span>)typeText:(<span class="built_in">NSString</span> *)text;</span><br></pre></td></tr></table></figure>
<h4 id="XCUIElementAttributes">XCUIElementAttributes</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) <span class="built_in">NSString</span> *identifier;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) <span class="built_in">CGRect</span> frame;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, nullable) <span class="keyword">id</span> value;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *title;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *label;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) XC<span class="built_in">UIElementType</span> elementType;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, getter = isEnabled) <span class="built_in">BOOL</span> enabled;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) XC<span class="built_in">UIUserInterfaceSizeClass</span> horizontalSizeClass;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) XC<span class="built_in">UIUserInterfaceSizeClass</span> verticalSizeClass;</span><br></pre></td></tr></table></figure>
<h3 id="XCUIElementQuery">XCUIElementQuery</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) XC<span class="built_in">UIElement</span> *element;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>) <span class="built_in">NSUInteger</span> count;</span><br><span class="line">- (XC<span class="built_in">UIElement</span> *)elementAtIndex:(<span class="built_in">NSUInteger</span>)index;</span><br><span class="line">- (XC<span class="built_in">UIElement</span> *)elementMatchingPredicate:(<span class="built_in">NSPredicate</span> *)predicate;</span><br><span class="line">- (XC<span class="built_in">UIElement</span> *)elementMatchingType:(XC<span class="built_in">UIElementType</span>)elementType identifier:(nullable <span class="built_in">NSString</span> *)identifier;</span><br><span class="line">- (XC<span class="built_in">UIElement</span> *)objectForKeyedSubscript:(<span class="built_in">NSString</span> *)key;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSArray</span>&lt;XC<span class="built_in">UIElement</span> *&gt; *allElementsBoundByAccessibilityElement;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSArray</span>&lt;XC<span class="built_in">UIElement</span> *&gt; *allElementsBoundByIndex;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)descendantsMatchingType:(XC<span class="built_in">UIElementType</span>)type;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)childrenMatchingType:(XC<span class="built_in">UIElementType</span>)type;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)matchingPredicate:(<span class="built_in">NSPredicate</span> *)predicate;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)matchingType:(XC<span class="built_in">UIElementType</span>)elementType identifier:(nullable <span class="built_in">NSString</span> *)identifier;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)matchingIdentifier:(<span class="built_in">NSString</span> *)identifier;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)containingPredicate:(<span class="built_in">NSPredicate</span> *)predicate;</span><br><span class="line">- (XC<span class="built_in">UIElementQuery</span> *)containingType:(XC<span class="built_in">UIElementType</span>)elementType identifier:(nullable <span class="built_in">NSString</span> *)identifier;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *debugDescription;</span><br></pre></td></tr></table></figure>
<h4 id="XCUIElementTypeQueryProvider">XCUIElementTypeQueryProvider</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *groups;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *windows;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *sheets;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *drawers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *alerts;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *dialogs;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *buttons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *radioButtons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *radioGroups;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *checkBoxes;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *disclosureTriangles;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *popUpButtons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *comboBoxes;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *menuButtons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *toolbarButtons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *popovers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *keyboards;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *keys;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *navigationBars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *tabBars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *tabGroups;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *toolbars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *statusBars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *tables;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *tableRows;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *tableColumns;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *outlines;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *outlineRows;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *browsers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *collectionViews;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *sliders;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *pageIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *progressIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *activityIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *segmentedControls;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *pickers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *pickerWheels;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *switches;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *toggles;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *links;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *images;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *icons;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *searchFields;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *scrollViews;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *scrollBars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *staticTexts;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *textFields;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *dateFields;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *timeFields;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *textViews;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *menus;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *menuItems;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *menuBars;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *menuBarItems;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *maps;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *webViews;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *incrementArrows;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *decrementArrows;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *timelines;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *ratingIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *valueIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *splitGroups;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *splitters;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *relevanceIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *colorWells;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *helpTags;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *mattes;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *dockItems;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *rulers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *rulerMarkers;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *grids;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *levelIndicators;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *cells;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *layoutAreas;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *layoutItems;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">readonly</span>, <span class="keyword">copy</span>) XC<span class="built_in">UIElementQuery</span> *handles;</span><br></pre></td></tr></table></figure>
<h3 id="Demo">Demo</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)testExample &#123;</span><br><span class="line">    <span class="comment">// Use recording to get started writing UI tests.</span></span><br><span class="line">    <span class="comment">// Use XCTAssert and related functions to verify your tests produce the correct results.</span></span><br><span class="line">    XC<span class="built_in">UIApplication</span> *app = [[XC<span class="built_in">UIApplication</span> alloc] init];</span><br><span class="line">    [app launch];</span><br><span class="line">    [app<span class="variable">.tables</span><span class="variable">.cells</span><span class="variable">.staticTexts</span>[<span class="string">@"Today"</span>] tap];</span><br><span class="line">    </span><br><span class="line">    XC<span class="built_in">UIElementQuery</span> *todayNavigationBar = [app<span class="variable">.navigationBars</span> matchingIdentifier:<span class="string">@"Today"</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> originalcountOfCounts = app<span class="variable">.tables</span><span class="variable">.cells</span><span class="variable">.count</span>;</span><br><span class="line">    [todayNavigationBar<span class="variable">.buttons</span>[<span class="string">@"Edit"</span>] tap];</span><br><span class="line">    </span><br><span class="line">    XC<span class="built_in">UIElement</span> *cell = [[app<span class="variable">.tables</span> childrenMatchingType:XC<span class="built_in">UIElementTypeCell</span>] elementAtIndex:<span class="number">1</span>];</span><br><span class="line">    [cell<span class="variable">.buttons</span>[<span class="string">@"Delete "</span>] tap];</span><br><span class="line">    [[[[cell childrenMatchingType:XC<span class="built_in">UIElementTypeButton</span>] matchingIdentifier:<span class="string">@"Delete"</span>] elementAtIndex:<span class="number">0</span>] tap];</span><br><span class="line">    [todayNavigationBar<span class="variable">.buttons</span>[<span class="string">@"Done"</span>] tap];</span><br><span class="line">    [todayNavigationBar<span class="variable">.buttons</span>[<span class="string">@"Lister"</span>] tap];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> updatedCountOfCells = app<span class="variable">.tables</span><span class="variable">.cells</span><span class="variable">.count</span>;</span><br><span class="line">    XCTAssertEqual(originalcountOfCounts, updatedCountOfCells+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><iframe src="https://player.vimeo.com/video/131854085" width="500" height="313" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe> </p><p><a href="https://vimeo.com/131854085" target="_blank" rel="external">UI Testing Example</a> from <a href="https://vimeo.com/user41408291" target="_blank" rel="external">Ying Zhao</a> on <a href="https://vimeo.com" target="_blank" rel="external">Vimeo</a>.</p><p></p>
<p>The testing report will generate in the console when the test case running. It will output every step of the case execution. Next I’ll write more sample code in this blog：-）</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="UI_Testing_API">UI Testing API</h2><p>There are there main Classes in UI Testing: <code>XCUIApplication</code>, <code>XCUIElement</c]]>
    </summary>
    
      <category term="UITestingAPI" scheme="http://liontree.github.io/all-tags/UITestingAPI/"/>
    
      <category term="UITestingInXcode" scheme="http://liontree.github.io/all-tags/UITestingInXcode/"/>
    
      <category term="XCUIApplication" scheme="http://liontree.github.io/all-tags/XCUIApplication/"/>
    
      <category term="XCUIElement" scheme="http://liontree.github.io/all-tags/XCUIElement/"/>
    
      <category term="XCUIElementQuery" scheme="http://liontree.github.io/all-tags/XCUIElementQuery/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[UI Testing In Xcode]]></title>
    <link href="http://liontree.github.io/2015/06/24/UI-Testing-In-Xcode/index.html"/>
    <id>http://liontree.github.io/2015/06/24/UI-Testing-In-Xcode/index.html</id>
    <published>2015-06-24T06:56:32.000Z</published>
    <updated>2015-06-25T10:58:40.000Z</updated>
    <content type="html"><![CDATA[<h2 id="UI_Testing_In_Xcode_Introducing">UI Testing In Xcode Introducing</h2><p>Apple provides a new UI testing method in WWDC this year. It based on XCTest and Accessibility that can be used on iOS, watchOS and OSX. Before it appears I use UI Automation and Appium sometimes. And now, I can try to play with the UI testing in a new way. It’s really exciting.</p>
<p>The new UI testing tool allows you to wirte the testing code in Xcode because the XCTest framework is integrated with Xcode. Different with writing JavaScript based on UI Automation in Instruments, the new method can make the testing code more unified with the project as it can be executed directly in Xcode almost like the Unit test. And a more wonderful thing is that it supports UI Recording. When you start UI Recording, it is synthesizing user events and generating code depending on your operating. The generated code needs less modify before it can run successfully. In this blog, I’ll share the process that I used UI Testing(all about iOS).</p>
<h2 id="UI_Testing_Preparation">UI Testing Preparation</h2><h3 id="Testing_Environments">Testing Environments</h3><ol>
<li>Xcode7</li>
<li>iOS9 SDK</li>
</ol>
<p>My development devices haven’t update to iOS9, so I use the simulator instead. If you use real device, there are other requirements as you can refer to the WWDC video or the keynote.</p>
<h3 id="Example_app">Example app</h3><p>There is an example app providing by developer.apple.com, you can download it from <a href="https://developer.apple.com/library/prerelease/watchos/samplecode/Lister/Introduction/Intro.html" target="_blank" rel="external">here</a>. After unzip it you can see a list of files in the folder as below. </p>
<p><img src="folder.png" height="130"></p>
<p>Choose a project from <code>objective-c</code> or <code>swift</code> as you like, then open it with Xcode7. </p>
<p><img src="xcode7Inferface.png" height="400"></p>
<p>According to the <code>iOS and Watch Quick Start.pdf</code> guide we must complete to set up the project before the Lister.app can run. Here are the steps:</p>
<h4 id="setup_the_bundle_identifier">setup the bundle identifier</h4><p>Choose the project <code>Lister</code> ——&gt; <code>Building Settings</code> and find the <code>LISTER_BUNDLE_PREFIX</code>, then modify it with your own developer account.</p>
<h4 id="select_development_team_for_these_targets">select development team for these targets</h4><pre><code>Lister
Lister Today
Lister WatchKit <span class="keyword">Extension</span>
Lister WatchKit App
ListerKit
</code></pre><p><img src="bundle.png" height="400"></p>
<h4 id="Create_Provisioning_Profiles_for_the_below_targets">Create Provisioning Profiles for the below targets</h4><pre><code>Lister
Lister Today
Lister WatchKit <span class="keyword">Extension</span>
</code></pre><p>Click <code>Fix issue</code> and Xcode will download a new provisioning profile for that target.</p>
<p><img src="Provisioning.png" height="80"></p>
<p>Now you are ready to build the Lister.app after you complete all these steps.</p>
<p>When I tried to build and run the app, there was an error happened which caused the app crash. The error message is: <code>Terminating app due to uncaught exception &#39;NSInternalInconsistencyException&#39;, reason: &#39;The shared application group container is unavailable. Check your entitlements and provisioning profiles for this target.</code> It shows that there is a mistake about application group container. You can choose the Lister target and find the <code>App Groups</code> in Capabilities, then fix issue. And then build and run the app again. It’s running successfully now.</p>
<p><img src="groupcontainer.png" height="400"></p>
<p>It is the main interface of the Lister.app.</p>
<p><img src="appwindow.png" height="400"></p>
<p>Now let’s have a try with the UI Testing.</p>
<h2 id="UI_Testing_In_Xcode">UI Testing In Xcode</h2><h3 id="Add_UI_Testing_Target">Add UI Testing Target</h3><div height="200"><img src="UITest1.png" height="300" style="float:left"><img src="UITest2.png" style="float:left;margin-left:20px" height="300"></div>

<p>Then execute UI Testing from <code>Lister_UI_Tests.m</code>. Tab <code>command+U</code> then the testing cases will be executed. After testing completed the flag state should be changed as below.</p>
<p><img src="UITest3.png" height="400"></p>
<h3 id="UI_Recording_In_Xcode">UI Recording In Xcode</h3><p><iframe src="https://player.vimeo.com/video/131726133" width="500" height="313" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen></iframe> </p><p><a href="https://vimeo.com/131726133" target="_blank" rel="external">UI Recording In Xcode</a> from <a href="https://vimeo.com/user41408291" target="_blank" rel="external">Ying Zhao</a> on <a href="https://vimeo.com" target="_blank" rel="external">Vimeo</a>.</p><p></p>
<p>UI Testing试玩完毕，接下来接口相关的研究及case示例整理好会再发出来：-）</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="UI_Testing_In_Xcode_Introducing">UI Testing In Xcode Introducing</h2><p>Apple provides a new UI testing method in WWDC this year. It]]>
    </summary>
    
      <category term="UITestingInXcode" scheme="http://liontree.github.io/all-tags/UITestingInXcode/"/>
    
  </entry>
  
</feed>